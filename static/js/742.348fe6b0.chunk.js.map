{"version":3,"file":"static/js/742.348fe6b0.chunk.js","mappings":"kPAEMA,E,QAAUC,GAAAA,OAAa,CAC3BC,QAAS,gCACTC,OAAQ,MACRC,OAAQ,CACNC,QAAS,sCAIAC,EAAa,mCAAG,WAAMF,GAAN,yFACJJ,EAAQO,IAAR,gBAAqBH,EAArB,aADI,cACrBI,EADqB,OAGrBC,EAAOD,EAASC,KAAKC,KAHA,kBAKpBD,GALoB,2CAAH,sD,mBCsC1B,EA3Ca,WACX,IAAQE,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOb,EAAP,KAAgBc,EAAhB,KACMC,GAAgBC,EAAAA,EAAAA,SAAO,GAkB7B,OAhBAC,EAAAA,EAAAA,YAAU,WACJF,EAAcG,UAChBH,EAAcG,SAAU,GAE1B,IAAMC,EAAa,mCAAG,6GAEYb,EAAcK,GAF1B,OAEZS,EAFY,OAGlBN,EAAWM,GAHO,gDAKlBC,QAAQC,IAAR,MALkB,yDAAH,qDASnBH,GACD,GAAE,CAACR,KAGF,+BACE,wBACGX,EAAQuB,KACP,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACED,IACE,UAACE,EAAA,EAAD,YACE,gBACEC,IAAG,yCAAoCH,GACvCI,IAAKL,EACLM,MAAM,WAER,wBAAKN,KACL,uCAAeE,OAPPH,EAFd,OAgBT,C","sources":["services/credits.service.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst credits = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  method: 'get',\n  params: {\n    api_key: '0a6b3e0f3263435d7fc5dc734c160ca5',\n  },\n});\n\nexport const getCreditsApi = async params => {\n  const response = await credits.get(`movie/${params}/credits`);\n\n  const data = response.data.cast;\n\n  return data;\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport { getCreditsApi } from '../../services/credits.service';\nimport { Box } from 'Theme/Box';\n\nconst Cast = () => {\n  const { moviesId } = useParams();\n  const [credits, setCredits] = useState([]);\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n    const getApiService = async () => {\n      try {\n        const responseCredits = await getCreditsApi(moviesId);\n        setCredits(responseCredits);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getApiService();\n  }, [moviesId]);\n\n  return (\n    <>\n      <ul>\n        {credits.map(\n          ({ id, name, profile_path, character }) =>\n            profile_path && (\n              <Box key={id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                  alt={name}\n                  width=\"100px\"\n                />\n                <li>{name}</li>\n                <p>Character: {character}</p>\n              </Box>\n            )\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["credits","axios","baseURL","method","params","api_key","getCreditsApi","get","response","data","cast","moviesId","useParams","useState","setCredits","isFirstRender","useRef","useEffect","current","getApiService","responseCredits","console","log","map","id","name","profile_path","character","Box","src","alt","width"],"sourceRoot":""}